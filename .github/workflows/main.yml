name: Build

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    - name: Git pull Labtool
      run: |
          set -ex
          git clone https://github.com/jancumps/pico_scpi_usbtmc_labtool
          cd pico_scpi_usbtmc_labtool
          git checkout 47-reply-when-service-request-is-invoked
          cd ..

    - name: Git pull Pico SDK
      run: |
          set -ex
          git clone https://github.com/raspberrypi/pico-sdk.git
          cd pico-sdk
          git submodule update --init
          cd ..

    - name: Patch TinyUSB
      run: |
          set -ex
          cd pico-sdk/lib/tinyusb/src/class
          git apply ../../../../../pico_scpi_usbtmc_labtool/usbtmc_device.patch
          cd ../../../../..

    - name: Git pull Scpi Parser
      run: |    
          git clone https://github.com/j123b567/scpi-parser.git
          cd scpi-parser
          git submodule update --init

    - name: Install toolchains
      run: |
          set -ex
          wget -q https://developer.arm.com/-/media/Files/downloads/gnu/12.3.rel1/binrel/arm-gnu-toolchain-12.3.rel1-x86_64-arm-none-eabi.tar.xz
          tar -xvf arm-gnu-toolchain-12.3.rel1-x86_64-arm-none-eabi.tar.xz 
          rm arm-gnu-toolchain-12.3.rel1-x86_64-arm-none-eabi.tar.xz

    - name: Build
      env:
          PICO_SDK_PATH: pico-sdk
          SCPI_LIB_PATH: scpi-parser
      run: |
          mkdir build
          cmake -B build -S .
          make -C build
