name: Build

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Build:
    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v3
    - name: Get Labtool
      run: |
          set -ex
          git clone https://github.com/jancumps/pico_scpi_usbtmc_labtool
          cd pico_scpi_usbtmc_labtool
          git checkout 47-reply-when-service-request-is-invoked
          cd ..

    - name: Get Pico SDK
      run: |
          set -ex
          git clone https://github.com/raspberrypi/pico-sdk.git
          cd pico-sdk
          git submodule update --init
          cd ..

    - name: Patch TinyUSB
      run: |
          set -ex
          cd pico-sdk/lib/tinyusb/src/class
          git apply ../../../../../pico_scpi_usbtmc_labtool/usbtmc_device.patch
          cd ../../../../..

    - name: Get Scpi Parser
      run: |    
          git clone https://github.com/j123b567/scpi-parser.git
          cd scpi-parser
          git submodule update --init
    
    - name: Install Arm GNU Toolchain (arm-none-eabi-gcc)
      uses: carlosperate/arm-none-eabi-gcc-action@v1
      with:
        release: '12.3.Rel1' # <-- The compiler release to use
    
    - name: Build
      env:
          PICO_SDK_PATH: ${{github.workspace}}/pico-sdk
          SCPI_LIB_PATH: ${{github.workspace}}/scpi-parser/libscpi
      run: |
          mkdir build
          cmake -B build -S .
          make -C build

    - name: Upload uf2 file as artifact
      uses: actions/upload-artifact@v3
      #env:
      #  ACTIONS_RUNNER_DEBUG: true
      with:
        name: pico_scpi_usbtmc_labtool.uf2
        path:  ${{github.workspace}}/build/pico_scpi_usbtmc_labtool.uf2

    - name: Release uf2 with Notes
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{github.workspace}}/build/pico_scpi_usbtmc_labtool.uf2

